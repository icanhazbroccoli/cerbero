From 41bab415479cbd9c1059b562e9ef9bf18607b52e Mon Sep 17 00:00:00 2001
From: Robert Swain <robert.swain@ericsson.com>
Date: Fri, 17 Jul 2015 08:32:13 +0200
Subject: [PATCH 6/7] Revert "transport_agent: Use new-candidate-full instead
 of new-candidate"

This reverts commit 605fbcdc734444a936dde73ddc19b300f59c7503.
---
 transport/owr_transport_agent.c | 45 +++++++++++++++++++++++++++++------------
 1 file changed, 32 insertions(+), 13 deletions(-)

diff --git a/transport/owr_transport_agent.c b/transport/owr_transport_agent.c
index 68e448e..ef7065f 100644
--- a/transport/owr_transport_agent.c
+++ b/transport/owr_transport_agent.c
@@ -171,7 +171,7 @@ static void prepare_transport_bin_data_receive_elements(OwrTransportAgent *trans
 static void prepare_transport_bin_data_send_elements(OwrTransportAgent *transport_agent,
     guint stream_id);
 static void set_send_ssrc_and_cname(OwrTransportAgent *agent, OwrMediaSession *media_session);
-static void on_new_candidate(NiceAgent *nice_agent, NiceCandidate *nice_candidate, OwrTransportAgent *transport_agent);
+static void on_new_candidate(NiceAgent *nice_agent, guint stream_id, guint component_id, gchar *foundation, OwrTransportAgent *transport_agent);
 static void on_candidate_gathering_done(NiceAgent *nice_agent, guint stream_id, OwrTransportAgent *transport_agent);
 static void on_component_state_changed(NiceAgent *nice_agent, guint stream_id, guint component_id, OwrIceState state, OwrTransportAgent *transport_agent);
 static void handle_new_send_payload(OwrTransportAgent *transport_agent, OwrMediaSession *media_session, OwrPayload * payload);
@@ -398,7 +398,7 @@ static void owr_transport_agent_init(OwrTransportAgent *transport_agent)
         NICE_COMPATIBILITY_RFC5245, NICE_COMPATIBILITY_RFC5245);
     g_object_bind_property(transport_agent, "ice-controlling-mode", priv->nice_agent,
         "controlling-mode", G_BINDING_SYNC_CREATE);
-    g_signal_connect(G_OBJECT(priv->nice_agent), "new-candidate-full",
+    g_signal_connect(G_OBJECT(priv->nice_agent), "new-candidate",
         G_CALLBACK(on_new_candidate), transport_agent);
     g_signal_connect(G_OBJECT(priv->nice_agent), "candidate-gathering-done",
         G_CALLBACK(on_candidate_gathering_done), transport_agent);
@@ -1606,7 +1606,10 @@ static gboolean emit_new_candidate(GHashTable *args)
     OwrTransportAgent *transport_agent;
     OwrTransportAgentPrivate *priv;
     OwrSession *session;
-    NiceCandidate *nice_candidate;
+    guint stream_id, component_id;
+    gchar *foundation;
+    GSList *lcands, *item;
+    NiceCandidate *nice_candidate = NULL;
     OwrCandidate *owr_candidate;
     gchar *ufrag = NULL, *password = NULL;
     gboolean got_credentials;
@@ -1615,14 +1618,27 @@ static gboolean emit_new_candidate(GHashTable *args)
     g_return_val_if_fail(OWR_IS_TRANSPORT_AGENT(transport_agent), FALSE);
     priv = transport_agent->priv;
 
-    nice_candidate = (NiceCandidate *)g_hash_table_lookup(args, "nice_candidate");
-    g_return_val_if_fail(nice_candidate, FALSE);
-    session = get_session(transport_agent, nice_candidate->stream_id);
+    stream_id = GPOINTER_TO_UINT(g_hash_table_lookup(args, "stream_id"));
+    component_id = GPOINTER_TO_UINT(g_hash_table_lookup(args, "component_id"));
+    foundation = g_hash_table_lookup(args, "foundation");
+
+    session = get_session(transport_agent, stream_id);
     g_return_val_if_fail(OWR_IS_SESSION(session), FALSE);
 
+    lcands = nice_agent_get_local_candidates(priv->nice_agent, stream_id, component_id);
+    for (item = lcands; item; item = item->next) {
+        nice_candidate = item->data;
+        g_warn_if_fail(nice_candidate->component_id == component_id);
+
+        if (!g_strcmp0(nice_candidate->foundation, foundation))
+            break;
+    }
+    if (!item)
+        goto out;
+
     if (!nice_candidate->username || !nice_candidate->password) {
-        got_credentials = nice_agent_get_local_credentials(priv->nice_agent,
-            nice_candidate->stream_id, &ufrag, &password);
+        got_credentials = nice_agent_get_local_credentials(priv->nice_agent, stream_id,
+            &ufrag, &password);
         g_warn_if_fail(got_credentials);
 
         if (!nice_candidate->username)
@@ -1638,31 +1654,34 @@ static gboolean emit_new_candidate(GHashTable *args)
 
     owr_candidate = _owr_candidate_new_from_nice_candidate(nice_candidate);
     g_return_val_if_fail(owr_candidate, FALSE);
-    nice_candidate_free(nice_candidate);
 
     g_signal_emit_by_name(session, "on-new-candidate", owr_candidate);
     g_object_unref(owr_candidate);
 
+out:
+    g_slist_free_full(lcands, (GDestroyNotify)nice_candidate_free);
     g_object_unref(session);
+    g_free(foundation);
     g_hash_table_destroy(args);
     g_object_unref(transport_agent);
 
     return FALSE;
 }
 
-static void on_new_candidate(NiceAgent *nice_agent, NiceCandidate *nice_candidate,
-    OwrTransportAgent *transport_agent)
+static void on_new_candidate(NiceAgent *nice_agent, guint stream_id, guint component_id,
+    gchar *foundation, OwrTransportAgent *transport_agent)
 {
     GHashTable *args;
 
     g_return_if_fail(nice_agent);
     g_return_if_fail(OWR_IS_TRANSPORT_AGENT(transport_agent));
-    g_return_if_fail(nice_candidate);
 
     g_object_ref(transport_agent);
     args = _owr_create_schedule_table(OWR_MESSAGE_ORIGIN(transport_agent));
     g_hash_table_insert(args, "transport_agent", transport_agent);
-    g_hash_table_insert(args, "nice_candidate", nice_candidate_copy(nice_candidate));
+    g_hash_table_insert(args, "stream_id", GUINT_TO_POINTER(stream_id));
+    g_hash_table_insert(args, "component_id", GUINT_TO_POINTER(component_id));
+    g_hash_table_insert(args, "foundation", g_strdup(foundation));
 
     _owr_schedule_with_hash_table((GSourceFunc)emit_new_candidate, args);
 
-- 
2.3.2 (Apple Git-55)

